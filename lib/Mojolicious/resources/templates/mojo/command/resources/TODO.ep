% my $a = shift;
# Put the following code where convenienient
# in your startup application method.
# It may need slight modifications depending
# on your specific naming conventions.

# Helpers go after your already defined helpers.
# Beware to not override some already defined helper.
%= $a->{helpers};

# Routes go after your already defined routes
# See below if you are using Mojolicious::Plugin::RoutesConfig.
% for my $r (@{$a->{routes}}) {
    % for my $via (@{$r->{via}}) {
  $r-><%= lc $via %>('<%= $r->{route}
    %>')->to('<%= $r->{to} %>')->name('<%= $r->{name} %>');
    % }
% }

[
% for my $r (@{$a->{routes}}) {
    % for my $via (@{$r->{via}}) {
  {<%= lc $via %> => '<%= $r->{route}%>', to => '<%= $r->{to} %>', name =>'<%= $r->{name} %>'},
    % }
% }
]
# To use the OpenAPI functionality, you have to add the following code to
# your 'start' method.
#
$self->plugin("OpenAPI" => {url => $self->home->child("api/api.json")});

