% my $a = shift;
package <%= $a->{class} %>;
use Mojo::Base -base, -signatures;

has '<%= $a->{db_helper} %>';

sub add($self, $row)  {
  return $self-><%= $a->{db_helper} %>->db->insert('<%= $a->{t} %>', $row)->last_insert_id;
}

sub all($self, $opts = {}) {
  $opts->{limit} //= 100;
  $opts->{limit} = 100 unless $opts->{limit} =~/^\d+$/;
  $opts->{offset} //= 0;
  $opts->{offset} = 0 unless $opts->{offset} =~/^\d+$/;
  state $abstr = $self-><%= $a->{db_helper} %>->abstract;
  my ($sql, @bind) = $abstr->select('<%= $a->{t} %>', '*', $opts->{where}//());
  $sql .= " LIMIT $opts->{limit}" . ($opts->{offset} ? " OFFSET $opts->{offset}" : '');
  return $self-><%= $a->{db_helper} %>->db->query($sql, @bind)->hashes->to_array;
}

sub find($self, $id) {
  return $self-><%= $a->{db_helper} %>->db->select('<%= $a->{t} %>', undef, {id => $id})->hash;
}

sub remove($self, $id) {
  return $self-><%= $a->{db_helper} %>->db->delete('<%= $a->{t} %>', {id => $id});
}

sub save($self, $id, $row) {
  return $self-><%= $a->{db_helper} %>->db->update('<%= $a->{t} %>', $row, {id => $id});
}

1;
